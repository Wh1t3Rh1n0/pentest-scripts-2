#!/bin/bash

if [ "$2" == "" ] ; then
    echo
    echo "Simple password analysis - user:password edition // by Wh1t3Rh1n0"
    echo "================================================ //    2023-12-11"
    echo
    echo "Takes a colon-separated list of usernames and passwords (e.g., Hashcat output)"
    echo "and returns lists of users whose passwords matched certain criteria or"
    echo "weaknesses."
    echo
    echo "The list of affected usernames (but NOT passwords) is returned as output, so"
    echo "the list can be safely provided to customers without disclosing users'"
    echo "passwords, and specific remediation actions can be taken."
    echo
    echo "Currently checks:"
    echo "- Password length"
    echo "- Passwords containing common keywords"
    echo
    echo "Usage:"
    echo "------"
    echo "$0 <user:password file> <output dir> [company name regex]"
    echo
    echo "Note that the regex is optional and case insensitive."
    echo
    echo "Example:"
    echo "--------"
    echo "$0 cracked.txt 'Password analysis' 'Dewey|Cheatem|Howe|DCH'"
    echo
    exit
fi

start_dir="$PWD"
input_file="$1"
output_dir="$2"
keyword_regex="$3"

if [ -e "$2" ] ; then
    echo "WARNING: Output directory '$output_dir' already exists!"
    echo "Quitting."
    exit
fi

mkdir "$output_dir"


cat "$input_file" | tr "\r" "\n" | grep -avE '^[[:space:]]*$' | cut -d ':' -f 1 > "$output_dir"/"All users whose passwords were analyzed.txt"



# List users whose password is X length

mkdir "$output_dir"/"Length analysis"


cat "$input_file" | tr "\r" "\n" | grep -aE '(^[^:]+)(:)(.{,7}$)' | cut -d ':' -f 1 > "$output_dir"/"Length analysis/Users with 07 or fewer character passwords.txt"

for n in {08..25} ; do

    cat "$input_file" | tr "\r" "\n" | grep -aE '(^[^:]+)(:)(.{'$n'}$)' | cut -d ':' -f 1 > "$output_dir"/"Length analysis/Users with $n character passwords.txt"

done

cat "$input_file" | tr "\r" "\n" | grep -aE '(^[^:]+)(:)(.{26,}$)' | cut -d ':' -f 1 > "$output_dir"/"Length analysis/Users with 26 character or longer passwords.txt"



# Users with passwords containing weak keywords

mkdir "$output_dir"/"Keyword analysis"
outfile_prefix="Keyword analysis/Users with passwords containing"

cat "$input_file" | tr "\r" "\n" | grep -aiE '(^[^:]+)(:)(.*)(january|february|march|april|may|june|july|august|september|october|november|december)(.*$)' | cut -d ':' -f 1 > "$output_dir"/"$outfile_prefix month names (Full names).txt"

cat "$input_file" | tr "\r" "\n" | grep -aiE '(^[^:]+)(:)(.*)(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(.*$)' | cut -d ':' -f 1 > "$output_dir"/"$outfile_prefix month names (Full or abbreviated).txt"

cat "$input_file" | tr "\r" "\n" | grep -aiE '(^[^:]+)(:)(.*)(spring|summer|fall|autumn|winter)(.*$)' | cut -d ':' -f 1 > "$output_dir"/"$outfile_prefix season names.txt"

cat "$input_file" | tr "\r" "\n" | grep -aiE '(^[^:]+)(:)(.*)(p[a4@][s5$][s5$]w[o0]rd)(.*$)' | cut -d ':' -f 1 > "$output_dir"/"$outfile_prefix 'Password' (Plain or leet-speak).txt"

cat "$input_file" | tr "\r" "\n" | grep -aiE '(^[^:]+)(:)(.*)(welcome)(.*$)' | cut -d ':' -f 1 > "$output_dir"/"$outfile_prefix 'Welcome'.txt"

cat "$input_file" | tr "\r" "\n" | grep -aiE '(^[^:]+)(:)(.*)(19|20)([0-9]{2})(.*$)' | cut -d ':' -f 1 > "$output_dir"/"$outfile_prefix four-digit year (19xx or 20xx).txt"

if [ "$keyword_regex" != "" ] ; then
    cat "$input_file" | tr "\r" "\n" | grep -aiE '(^[^:]+)(:)(.*)('"$keyword_regex"')(.*$)' | cut -d ':' -f 1 > "$output_dir"/"$outfile_prefix company name.txt"
fi



# Clean up any empty files in the output
find "$output_dir" -type f -empty -exec rm -f {} \;
find "$output_dir" -type d -empty -exec rm -rf {} \;


# Display some output
cd "$output_dir"
echo
IFS="$(echo \n\b)"
for output in * ; do
    if [ -e "$output"/. ] ; then    
        echo "$output"
        echo "---"
        wc -l "$output"/* | sort -h
    else
        wc -l "$output"
    fi
    echo
done
cd "$start_dir"

